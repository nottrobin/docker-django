#! /bin/bash

set -euo pipefail

# If no default port is set for this project, set it to 8000
if [ -z "${PORT:-}" ]; then
  PORT=8000
fi

run_command=$@

# Update any python requirements
if [ -f $REQUIREMENTS_PATH ]; then
    if [[ ! -f "${REQUIREMENTS_HASH}" ]] || [[ "$(cat ${REQUIREMENTS_HASH})" != $(md5sum $REQUIREMENTS_PATH) ]]; then
        echo "Installing python modules." >> /dev/stderr
        pip install --requirement $REQUIREMENTS_PATH  # Install new dependencies
        md5sum $REQUIREMENTS_PATH > $REQUIREMENTS_HASH
    fi
else
    echo "$REQUIREMENTS_PATH not found - not installing requirements" >> /dev/stderr
fi

# Check for Django
if ! python -c "import django"; then
    echo "Error: Django not found." >> /dev/stderr
    exit 1
fi

# Wait for database to come up
echo "execfile('/db-check')" | ./manage.py shell -i bpython 2> /tmp/dberror || db_error=$?

DATABASE=true

if [ ${db_error:-} -eq 9 ]; then
    DATABASE=false
elif [ -n "${db_error:-}" ]; then
    cat /tmp/dberror
    exit 1
fi

# Run manage.py commands
if [ -n "$run_command" ]; then
    # If we have arguments, pass them to manage.py
    python manage.py $run_command
else
    # By default, prepare database and run server
    if $DATABASE; then
        python manage.py migrate --noinput
    fi
    python manage.py runserver 0.0.0.0:${PORT}
fi

