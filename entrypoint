#! /usr/bin/env bash

set -euo pipefail

# If no default port is set for this project, set it to 8000
if [ -z "${PORT:-}" ]; then
  PORT=8000
fi

run_command=$@

# Update any python requirements
if [ -f $REQUIREMENTS_PATH ]; then
    if [ ! -f "${REQUIREMENTS_HASH}" ] || [ "$(cat ${REQUIREMENTS_HASH})" != "$(md5sum $REQUIREMENTS_PATH)" ]; then
        echo "Installing python modules." >> /dev/stderr
        pip3 install --requirement $REQUIREMENTS_PATH  # Install new dependencies
        md5sum $REQUIREMENTS_PATH > $REQUIREMENTS_HASH
    fi
else
    echo "$REQUIREMENTS_PATH not found - not installing requirements" >> /dev/stderr
fi

# Check for Django
if ! python3 -c "import django"; then
    echo "Error: Django not found." >> /dev/stderr
    exit 1
fi

# Run manage.py commands
if [ -n "$run_command" ]; then
    # If we have a command to run, run it directly
    $run_command
else
    # By default, prepare database and run server
    if echo "exec(open('/db-check').read())" | python3 manage.py shell -i bpython 2> /tmp/dberror; then
        # Wait for database to come up before running migrate
        python3 manage.py migrate --noinput
    else
        # If we encountered an unrecognised error, print it and exit
        if [ $? -ne 9 ]; then cat /tmp/dberror && exit 1; fi
    fi

    python3 manage.py runserver 0.0.0.0:${PORT}
fi
